dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=stacker+psm

matrix:
  include:
    - env: TARGET=aarch64-linux-android
    - env: TARGET=arm-linux-androideabi
    - env: TARGET=armv7-linux-androideabi
    # does not work?
    # - env: TARGET=i686-linux-android
    - env: TARGET=x86_64-linux-android
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    # FIXME: Testing hangs, should be verified once-in-a-while manually.
    # could be made work by using full system emulation
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    # FIXME: tests could be made work by using full system emulation
    - env: TARGET=sparc64-unknown-linux-gnu DISABLE_TESTS=1
    # Not even a distribution exists that supports 32-bit SPARC...
    # - env: TARGET=sparc-unknown-linux-gnu DISABLE_TESTS=1
    # No Rustc for the target
    # - env: TARGET=sparcv9-sun-solaris DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl
    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx


    - env: TARGET=x86_64-apple-darwin
      os: osx
    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1
    # Bare metal
    # psm should work but testing on these seems like a difficult set-up?
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi
    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu GENERATE_DOCS
      rust: nightly
      before_script:
        - pip install 'travis-cargo<0.2' --user && export PATH=$HOME/.local/bin:$PATH
      after_success:
        - travis-cargo doc-upload
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly
    - env: TARGET=aarch64-apple-ios DISABLE_TESTS=1
      os: osx
      rust: nightly
    - env: TARGET=armv7-apple-ios DISABLE_TESTS=1
      os: osx
      rust: nightly
    - env: TARGET=armv7s-apple-ios DISABLE_TESTS=1
      os: osx
      rust: nightly
    - env: TARGET=i386-apple-ios DISABLE_TESTS=1
      os: osx
      rust: nightly
    # Why does this "just" run without even a simulator?
    - env: TARGET=x86_64-apple-ios DISABLE_TESTS=1
      os: osx
      rust: nightly

    - env: TARGET=wasm32-unknown-unknown
      install:
        - rustup target add $TARGET
        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      script:
        - wasm-pack test --chrome --headless --release wasm-tests
      addons:
        chrome: stable

    - name: "master doc to gh-pages"
      rust: nightly
      script:
        - cargo doc --no-deps
      deploy:
        provider: script
        script: curl -LsSf https://git.io/fhJ8n | rustc - && (cd target/doc && ../../rust_out)
        skip_cleanup: true
        on:
          branch: master

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

notifications:
  email: false

branches:
  only:
    - master
